(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const a of o)if(a.type==="childList")for(const s of a.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function e(o){const a={};return o.integrity&&(a.integrity=o.integrity),o.referrerPolicy&&(a.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?a.credentials="include":o.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function i(o){if(o.ep)return;o.ep=!0;const a=e(o);fetch(o.href,a)}})();class x{constructor(t){this.app=t,this.canvas=document.getElementById("drawing-canvas"),this.ctx=this.canvas.getContext("2d"),this.isDrawing=!1,this.lastX=0,this.lastY=0,this.offsetX=0,this.offsetY=0,this.scale=1,this.init()}init(){this.setupCanvas(),this.setupEventListeners()}setupCanvas(){this.resizeCanvas(),this.ctx.lineJoin="round",this.ctx.lineCap="round",this.ctx.lineWidth=2,window.addEventListener("resize",()=>this.resizeCanvas())}resizeCanvas(){const t=this.canvas.parentElement;this.canvas.width=t.clientWidth,this.canvas.height=t.clientHeight,this.redraw()}setupEventListeners(){this.canvas.addEventListener("mousedown",t=>this.startDrawing(t)),this.canvas.addEventListener("mousemove",t=>this.draw(t)),this.canvas.addEventListener("mouseup",()=>this.stopDrawing()),this.canvas.addEventListener("mouseout",()=>this.stopDrawing()),this.canvas.addEventListener("touchstart",t=>{t.preventDefault();const e=t.touches[0],i=new MouseEvent("mousedown",{clientX:e.clientX,clientY:e.clientY});this.startDrawing(i)}),this.canvas.addEventListener("touchmove",t=>{t.preventDefault();const e=t.touches[0],i=new MouseEvent("mousemove",{clientX:e.clientX,clientY:e.clientY});this.draw(i)}),this.canvas.addEventListener("touchend",()=>this.stopDrawing())}startDrawing(t){this.isDrawing=!0;const e=this.canvas.getBoundingClientRect();this.lastX=t.clientX-e.left,this.lastY=t.clientY-e.top,this.currentPath={type:"path",tool:this.app.currentTool,color:this.app.currentColor,points:[{x:this.lastX,y:this.lastY}],lineWidth:this.app.currentTool==="eraser"?20:this.ctx.lineWidth}}draw(t){if(!this.isDrawing)return;const e=this.canvas.getBoundingClientRect(),i=t.clientX-e.left,o=t.clientY-e.top;this.ctx.beginPath(),this.app.currentTool==="eraser"?(this.ctx.globalCompositeOperation="destination-out",this.ctx.strokeStyle="rgba(0,0,0,1)",this.ctx.lineWidth=20):(this.ctx.globalCompositeOperation="source-over",this.ctx.strokeStyle=this.app.currentColor,this.ctx.lineWidth=2),this.ctx.moveTo(this.lastX,this.lastY),this.ctx.lineTo(i,o),this.ctx.stroke(),this.ctx.globalCompositeOperation="source-over",this.currentPath.points.push({x:i,y:o}),this.lastX=i,this.lastY=o}stopDrawing(){this.isDrawing&&(this.isDrawing=!1,this.currentPath&&this.currentPath.points.length>1&&this.app.addToHistory(this.currentPath),this.currentPath=null)}redraw(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);for(const t of this.app.drawingHistory)t.type==="path"&&this.drawPath(t)}drawPath(t){if(!(t.points.length<2)){this.ctx.beginPath(),t.tool==="eraser"?(this.ctx.globalCompositeOperation="destination-out",this.ctx.strokeStyle="rgba(0,0,0,1)",this.ctx.lineWidth=t.lineWidth||20):(this.ctx.globalCompositeOperation="source-over",this.ctx.strokeStyle=t.color,this.ctx.lineWidth=t.lineWidth||2),this.ctx.moveTo(t.points[0].x,t.points[0].y);for(let e=1;e<t.points.length;e++)this.ctx.lineTo(t.points[e].x,t.points[e].y);this.ctx.stroke(),this.ctx.globalCompositeOperation="source-over"}}generateSVG(){const t=this.canvas.width,e=this.canvas.height;let i=`<svg width="${t}" height="${e}" xmlns="http://www.w3.org/2000/svg">`;i+='<rect width="100%" height="100%" fill="white"/>';for(const o of this.app.drawingHistory)if(o.type==="path"&&o.points.length>=2){if(o.tool==="eraser")continue;i+='<path d="',i+=`M${o.points[0].x},${o.points[0].y} `;for(let a=1;a<o.points.length;a++)i+=`L${o.points[a].x},${o.points[a].y} `;i+=`" stroke="${o.color}" stroke-width="${o.lineWidth||2}" fill="none" stroke-linecap="round" stroke-linejoin="round"/>`}return i+="</svg>",i}}class L{constructor(t){this.app=t,this.init()}init(){this.setupEventListeners()}setupEventListeners(){document.querySelectorAll(".color-btn").forEach(r=>{r.addEventListener("click",()=>{this.handleColorSelection(r)})});const e=document.getElementById("eraser-btn");e&&e.addEventListener("click",()=>{this.handleEraserSelection()});const i=document.getElementById("whiteboard-name");i&&i.addEventListener("change",()=>{this.app.updateWhiteboardName(i.value)});const o=document.getElementById("undo-btn");o&&o.addEventListener("click",()=>{this.app.undo()});const a=document.getElementById("redo-btn");a&&a.addEventListener("click",()=>{this.app.redo()});const s=document.getElementById("save-btn");s&&s.addEventListener("click",()=>{this.app.saveWhiteboard()});const n=document.getElementById("export-btn");n&&n.addEventListener("click",()=>{this.app.exportWhiteboard()});const d=document.getElementById("browse-files-btn");d&&d.addEventListener("click",()=>{this.app.showFileBrowser()}),document.addEventListener("keydown",r=>{r.ctrlKey&&r.key==="z"&&(r.preventDefault(),this.app.undo()),(r.ctrlKey&&r.key==="y"||r.ctrlKey&&r.shiftKey&&r.key==="z")&&(r.preventDefault(),this.app.redo()),r.ctrlKey&&r.key==="s"&&(r.preventDefault(),this.app.saveWhiteboard())})}handleColorSelection(t){document.querySelectorAll(".color-btn").forEach(a=>{a.classList.remove("active")}),t.classList.add("active");const i=document.getElementById("eraser-btn");i&&i.classList.remove("active");const o=t.getAttribute("data-color");this.app.setColor(o)}handleEraserSelection(){const t=document.getElementById("eraser-btn");this.app.currentTool==="eraser"?(this.app.setTool("pen"),t.classList.remove("active")):(this.app.setTool("eraser"),t.classList.add("active"))}updateToolState(){const t=document.getElementById("eraser-btn");t&&(this.app.currentTool==="eraser"?t.classList.add("active"):t.classList.remove("active"))}}class N{constructor(t){this.app=t,this.storageManager=t.storageManager,this.modal=null,this.fileList=[],this.searchTerm="",this.currentAction=null}async initialize(){this.createModal(),this.setupEventListeners(),console.log("File Browser component initialized")}createModal(){this.modal=document.createElement("div"),this.modal.className="modal-overlay",this.modal.style.display="none";const t=document.createElement("div");t.className="modal-content";const e=document.createElement("div");e.className="modal-header";const i=document.createElement("h2");i.textContent="File Browser";const o=document.createElement("button");o.className="close-btn",o.textContent="Ã—",o.setAttribute("title","Close"),o.addEventListener("click",()=>this.hideModal()),e.appendChild(i),e.appendChild(o);const a=document.createElement("div");a.className="action-bar";const s=document.createElement("div");s.className="search-container";const n=document.createElement("input");n.type="text",n.id="search-input",n.placeholder="Search whiteboards...",n.addEventListener("input",p=>{this.searchTerm=p.target.value.toLowerCase(),this.renderFileList()}),s.appendChild(n);const d=document.createElement("div");d.className="button-container";const r=document.createElement("button");r.className="action-btn",r.textContent="New Whiteboard",r.addEventListener("click",()=>this.createNewWhiteboard()),d.appendChild(r),a.appendChild(s),a.appendChild(d);const c=document.createElement("div");c.className="modal-body";const l=document.createElement("div");l.id="file-list-container",c.appendChild(l),t.appendChild(e),t.appendChild(a),t.appendChild(c),this.modal.appendChild(t),document.body.appendChild(this.modal)}setupEventListeners(){document.addEventListener("click",t=>{t.target.matches(".action-menu-btn, .action-menu-item")||this.closeAllActionMenus()}),document.addEventListener("keydown",t=>{t.ctrlKey&&t.key==="o"&&(t.preventDefault(),this.showModal())})}async showModal(){await this.refreshFileList(),this.modal.style.display="flex",setTimeout(()=>{const t=document.getElementById("search-input");t&&t.focus()},100)}hideModal(){this.modal.style.display="none",this.searchTerm="",this.closeAllActionMenus()}async refreshFileList(){try{this.fileList=await this.storageManager.listWhiteboards(),this.renderFileList()}catch(t){console.error("Failed to refresh file list:",t),this.showError("Failed to load whiteboards. Please try again.")}}renderFileList(){const t=document.getElementById("file-list-container");if(!t)return;t.innerHTML="";const e=this.searchTerm?this.fileList.filter(c=>c.name.toLowerCase().includes(this.searchTerm)):this.fileList;if(e.length===0){const c=document.createElement("div");c.className="empty-state";const l=this.searchTerm?`No whiteboards found matching "${this.searchTerm}"`:"No whiteboards saved yet. Create a new whiteboard to get started.";c.textContent=l,t.appendChild(c);return}const i=document.createElement("table");i.className="file-list";const o=document.createElement("thead"),a=document.createElement("tr"),s=document.createElement("th");s.textContent="Name";const n=document.createElement("th");n.textContent="Modified";const d=document.createElement("th");d.textContent="Actions",a.appendChild(s),a.appendChild(n),a.appendChild(d),o.appendChild(a),i.appendChild(o);const r=document.createElement("tbody");e.forEach(c=>{const l=document.createElement("tr"),p=document.createElement("td");p.className="file-name",p.textContent=c.name;const E=document.createElement("td");E.className="file-date",E.textContent=this.formatDate(c.modified);const g=document.createElement("td");g.className="file-actions";const b=document.createElement("button");b.className="action-btn open-btn",b.textContent="Open",b.addEventListener("click",()=>this.openFile(c.id));const w=document.createElement("button");w.className="action-menu-btn",w.textContent="â‹®",w.setAttribute("data-id",c.id),w.addEventListener("click",C=>this.toggleActionMenu(C));const h=document.createElement("div");h.className="action-menu",h.id=`action-menu-${c.id}`,h.style.display="none";const f=document.createElement("button");f.className="action-menu-item",f.textContent="Rename",f.addEventListener("click",()=>this.renameFile(c.id,c.name));const y=document.createElement("button");y.className="action-menu-item",y.textContent="Duplicate",y.addEventListener("click",()=>this.duplicateFile(c.id));const v=document.createElement("button");v.className="action-menu-item delete-item",v.textContent="Delete",v.addEventListener("click",()=>this.deleteFile(c.id,c.name)),h.appendChild(f),h.appendChild(y),h.appendChild(v),g.appendChild(b),g.appendChild(w),g.appendChild(h),l.appendChild(p),l.appendChild(E),l.appendChild(g),r.appendChild(l)}),i.appendChild(r),t.appendChild(i)}toggleActionMenu(t){const i=`action-menu-${t.target.getAttribute("data-id")}`,o=document.getElementById(i);this.closeAllActionMenus(),o&&(o.style.display=o.style.display==="none"?"block":"none"),t.stopPropagation()}closeAllActionMenus(){document.querySelectorAll(".action-menu").forEach(e=>{e.style.display="none"})}async openFile(t){try{const{content:e,metadata:i}=await this.storageManager.loadWhiteboard(t);await this.app.openWhiteboard(t,e,i.name),this.hideModal()}catch(e){console.error(`Failed to open whiteboard with ID ${t}:`,e),this.showError("Failed to open whiteboard. Please try again.")}}createNewWhiteboard(){this.app.createNewWhiteboard(),this.hideModal()}renameFile(t,e){this.closeAllActionMenus();const i=prompt("Enter new name for the whiteboard:",e);i&&i!==e&&this.storageManager.renameWhiteboard(t,i).then(()=>this.refreshFileList()).catch(o=>{console.error(`Failed to rename whiteboard with ID ${t}:`,o),this.showError("Failed to rename whiteboard. Please try again.")})}async duplicateFile(t){this.closeAllActionMenus();try{const{content:e,metadata:i}=await this.storageManager.loadWhiteboard(t),o=`Copy of ${i.name}`;await this.storageManager.saveWhiteboard(o,e),await this.refreshFileList()}catch(e){console.error(`Failed to duplicate whiteboard with ID ${t}:`,e),this.showError("Failed to duplicate whiteboard. Please try again.")}}deleteFile(t,e){this.closeAllActionMenus(),confirm(`Are you sure you want to delete "${e}"? This action cannot be undone.`)&&this.storageManager.deleteWhiteboard(t).then(()=>this.refreshFileList()).catch(i=>{console.error(`Failed to delete whiteboard with ID ${t}:`,i),this.showError("Failed to delete whiteboard. Please try again.")})}showError(t){alert(t)}formatDate(t){const e=new Date(t),i=new Date,o=new Date(i);return o.setDate(o.getDate()-1),e.toDateString()===i.toDateString()?`Today, ${e.toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})}`:e.toDateString()===o.toDateString()?`Yesterday, ${e.toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})}`:e.toLocaleDateString([],{year:"numeric",month:"short",day:"numeric"})}}class W{constructor(){this.root=null,this.db=null,this.dbName="blackandwhiteboard-db",this.storeName="whiteboards",this.initialized=!1}async initialize(){try{this.root=await navigator.storage.getDirectory(),await this.initializeDatabase(),this.initialized=!0,console.log("Storage Manager initialized")}catch(t){throw console.error("Failed to initialize Storage Manager:",t),t}}async initializeDatabase(){return new Promise((t,e)=>{const i=indexedDB.open(this.dbName,1);i.onerror=o=>{console.error("IndexedDB error:",o.target.error),e(o.target.error)},i.onsuccess=o=>{this.db=o.target.result,console.log("IndexedDB opened successfully"),t()},i.onupgradeneeded=o=>{const a=o.target.result;if(!a.objectStoreNames.contains(this.storeName)){const s=a.createObjectStore(this.storeName,{keyPath:"id"});s.createIndex("name","name",{unique:!1}),s.createIndex("created","created",{unique:!1}),s.createIndex("modified","modified",{unique:!1}),console.log("Object store created")}}})}async saveWhiteboard(t,e,i=null){var o;this.initialized||await this.initialize();try{const a=i||crypto.randomUUID(),s=new Date().toISOString(),d=await(await this.root.getFileHandle(`${a}.svg`,{create:!0})).createWritable();await d.write(e),await d.close();const r=this.generateThumbnail(e),c={id:a,name:t,created:i&&((o=await this.getWhiteboardMetadata(i))==null?void 0:o.created)||s,modified:s,size:e.length,thumbnail:r};return await this.saveMetadata(c),console.log(`Whiteboard "${t}" saved with ID: ${a}`),a}catch(a){throw console.error("Failed to save whiteboard:",a),a}}async loadWhiteboard(t){this.initialized||await this.initialize();try{const o=await(await(await this.root.getFileHandle(`${t}.svg`)).getFile()).text(),a=await this.getWhiteboardMetadata(t);return console.log(`Whiteboard "${a.name}" loaded`),{content:o,metadata:a}}catch(e){throw console.error(`Failed to load whiteboard with ID ${t}:`,e),e}}async deleteWhiteboard(t){this.initialized||await this.initialize();try{await this.root.removeEntry(`${t}.svg`),await this.deleteMetadata(t),console.log(`Whiteboard with ID ${t} deleted`)}catch(e){throw console.error(`Failed to delete whiteboard with ID ${t}:`,e),e}}async renameWhiteboard(t,e){this.initialized||await this.initialize();try{const i=await this.getWhiteboardMetadata(t);if(!i)throw new Error(`Whiteboard with ID ${t} not found`);i.name=e,i.modified=new Date().toISOString(),await this.saveMetadata(i),console.log(`Whiteboard renamed to "${e}"`)}catch(i){throw console.error(`Failed to rename whiteboard with ID ${t}:`,i),i}}async listWhiteboards(){return this.initialized||await this.initialize(),new Promise((t,e)=>{const a=this.db.transaction(this.storeName,"readonly").objectStore(this.storeName).getAll();a.onsuccess=()=>{const s=a.result.sort((n,d)=>new Date(d.modified)-new Date(n.modified));console.log(`Found ${s.length} whiteboards`),t(s)},a.onerror=s=>{console.error("Failed to list whiteboards:",s.target.error),e(s.target.error)}})}async saveMetadata(t){return new Promise((e,i)=>{const s=this.db.transaction(this.storeName,"readwrite").objectStore(this.storeName).put(t);s.onsuccess=()=>e(),s.onerror=n=>{console.error("Failed to save metadata:",n.target.error),i(n.target.error)}})}async getWhiteboardMetadata(t){return new Promise((e,i)=>{const s=this.db.transaction(this.storeName,"readonly").objectStore(this.storeName).get(t);s.onsuccess=()=>e(s.result),s.onerror=n=>{console.error("Failed to get metadata:",n.target.error),i(n.target.error)}})}async deleteMetadata(t){return new Promise((e,i)=>{const s=this.db.transaction(this.storeName,"readwrite").objectStore(this.storeName).delete(t);s.onsuccess=()=>e(),s.onerror=n=>{console.error("Failed to delete metadata:",n.target.error),i(n.target.error)}})}generateThumbnail(t){return"data:image/svg+xml;base64,"+btoa(t.substring(0,1e3))}}class D{constructor(){this.container=document.getElementById("toast-container"),this.toasts=[],this.nextId=1}show(t,e="info",i=3e3){const o=this.nextId++,a=document.createElement("div");a.className=`toast ${e}`,a.dataset.id=o;const s=document.createElement("div");s.className="toast-message",s.textContent=t;const n=document.createElement("button");n.className="toast-close",n.textContent="Ã—",n.addEventListener("click",()=>this.remove(o)),a.appendChild(s),a.appendChild(n),this.container.appendChild(a),this.toasts.push({id:o,element:a,timeout:null});const d=setTimeout(()=>{this.remove(o)},i),r=this.toasts.findIndex(c=>c.id===o);return r!==-1&&(this.toasts[r].timeout=d),o}success(t,e=3e3){return this.show(t,"success",e)}error(t,e=4e3){return this.show(t,"error",e)}info(t,e=3e3){return this.show(t,"info",e)}remove(t){const e=this.toasts.findIndex(a=>a.id===t);if(e===-1)return;const{element:i,timeout:o}=this.toasts[e];o&&clearTimeout(o),i.classList.add("removing"),setTimeout(()=>{i.parentNode&&i.parentNode.removeChild(i)},300),this.toasts.splice(e,1)}removeAll(){[...this.toasts].forEach(e=>{this.remove(e.id)})}}const u=new D;class F{constructor(){this.currentColor="black",this.currentTool="pen",this.drawingHistory=[],this.redoStack=[],this.isDrawing=!1,this.whiteboardName="Untitled Whiteboard",this.currentWhiteboardId=null,this.storageManager=new W,this.canvas=new x(this),this.toolbar=new L(this),this.fileBrowser=new N(this),this.init()}async init(){try{await this.storageManager.initialize(),await this.fileBrowser.initialize(),this.updateWhiteboardName(this.whiteboardName),this.updateUndoRedoState(),console.log("Black and White Board initialized")}catch(t){console.error("Failed to initialize application:",t)}}setColor(t){this.currentColor=t,this.currentTool==="eraser"&&(this.setTool("pen"),this.toolbar.updateToolState()),console.log(`Color set to: ${t}`)}setTool(t){this.currentTool=t,console.log(`Tool set to: ${t}`)}addToHistory(t){this.drawingHistory.push(t),this.redoStack=[],this.updateUndoRedoState()}undo(){if(this.drawingHistory.length===0)return;const t=this.drawingHistory.pop();this.redoStack.push(t),this.updateUndoRedoState(),this.canvas.redraw(),console.log("Undo action performed")}redo(){if(this.redoStack.length===0)return;const t=this.redoStack.pop();this.drawingHistory.push(t),this.updateUndoRedoState(),this.canvas.redraw(),console.log("Redo action performed")}updateUndoRedoState(){const t=document.getElementById("undo-btn"),e=document.getElementById("redo-btn");t&&(t.disabled=this.drawingHistory.length===0),e&&(e.disabled=this.redoStack.length===0)}updateWhiteboardName(t){this.whiteboardName=t;const e=document.getElementById("whiteboard-name");e&&(e.value=t)}async saveWhiteboard(){try{const t=this.canvas.generateSVG(),e=await this.storageManager.saveWhiteboard(this.whiteboardName,t,this.currentWhiteboardId);this.currentWhiteboardId=e,u.success(`Whiteboard "${this.whiteboardName}" saved successfully`),console.log(`Whiteboard "${this.whiteboardName}" saved with ID: ${e}`)}catch(t){console.error("Failed to save whiteboard:",t),u.error("Failed to save whiteboard. Please try again.")}}exportWhiteboard(){try{const t=this.canvas.generateSVG(),e=new Blob([t],{type:"image/svg+xml"}),i=URL.createObjectURL(e),o=document.createElement("a");o.href=i,o.download=`${this.whiteboardName}.svg`,document.body.appendChild(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(i),u.success(`Whiteboard exported as "${this.whiteboardName}.svg"`),console.log(`Whiteboard "${this.whiteboardName}" exported as SVG`)}catch(t){console.error("Failed to export whiteboard:",t),u.error("Failed to export whiteboard. Please try again.")}}showFileBrowser(){this.fileBrowser.showModal()}async openWhiteboard(t,e,i){try{this.drawingHistory=this.parseSVGToCommands(e),this.redoStack=[],this.currentWhiteboardId=t,this.updateWhiteboardName(i),this.canvas.redraw(),this.updateUndoRedoState(),u.info(`Opened whiteboard: "${i}"`),console.log(`Opened whiteboard: ${i}`)}catch(o){console.error("Failed to open whiteboard:",o),u.error("Failed to open whiteboard. Please try again.")}}createNewWhiteboard(){this.drawingHistory=[],this.redoStack=[],this.currentWhiteboardId=null,this.updateWhiteboardName("Untitled Whiteboard"),this.canvas.redraw(),this.updateUndoRedoState(),u.info("New whiteboard created"),console.log("Created new whiteboard")}parseSVGToCommands(t){const e=[];try{new DOMParser().parseFromString(t,"image/svg+xml").querySelectorAll("path").forEach(s=>{const n=s.getAttribute("d"),d=s.getAttribute("stroke"),r=parseFloat(s.getAttribute("stroke-width")||"2");if(!n)return;const c=this.parsePathData(n);c.length>=2&&e.push({type:"path",tool:"pen",color:d,points:c,lineWidth:r})})}catch(i){console.error("Failed to parse SVG:",i)}return e}parsePathData(t){const e=[],i=t.trim().split(/\s+/);for(let o=0;o<i.length;o++){const a=i[o];if(a==="M"||a==="L"){if(o+2<i.length){const s=parseFloat(i[o+1]),n=parseFloat(i[o+2]);!isNaN(s)&&!isNaN(n)&&e.push({x:s,y:n}),o+=2}}else if(a.startsWith("M")||a.startsWith("L")){const s=a.substring(1).split(",");if(s.length===2){const n=parseFloat(s[0]),d=parseFloat(s[1]);!isNaN(n)&&!isNaN(d)&&e.push({x:n,y:d})}}}return e}}document.addEventListener("DOMContentLoaded",()=>{window.app=new F});
